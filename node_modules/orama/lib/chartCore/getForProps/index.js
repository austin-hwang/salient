'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTickFormatters = exports.getScales = exports.getTickCounts = exports.getRanges = exports.getDomains = exports.getTypes = exports.getForProps = exports.getPlotRect = exports.getDimArrays = undefined;

var _reduce2 = require('lodash/reduce');

var _reduce3 = _interopRequireDefault(_reduce2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; // Copyright 2017 Kensho Technologies, Inc.

var _getDimArrays = require('../../chartCore/getDimArrays');

Object.defineProperty(exports, 'getDimArrays', {
  enumerable: true,
  get: function get() {
    return _getDimArrays.getDimArrays;
  }
});

var _getPlotRect = require('../../chartCore/getPlotRect');

Object.defineProperty(exports, 'getPlotRect', {
  enumerable: true,
  get: function get() {
    return _getPlotRect.getPlotRect;
  }
});

var _getForKey = require('../../chartCore/getForKey');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var getForProps = exports.getForProps = function getForProps(value, getFunc) {
  return function (props) {
    return (0, _reduce3.default)(props.groupedKeys, function (acc, key) {
      if (props['' + key + value]) return acc;
      return _extends({}, acc, _defineProperty({}, '' + key + value, getFunc(props, key)));
    }, {});
  };
};

var getTypes = exports.getTypes = getForProps('Type', _getForKey.getType);
var getDomains = exports.getDomains = getForProps('Domain', _getForKey.getDomain);
var getRanges = exports.getRanges = getForProps('Range', _getForKey.getRange);
var getTickCounts = exports.getTickCounts = getForProps('TickCount', _getForKey.getTickCount);
var getScales = exports.getScales = getForProps('Scale', _getForKey.getScale);
var getTickFormatters = exports.getTickFormatters = getForProps('TickFormat', _getForKey.getTickFormat);