'use strict';

var _mocha = require('mocha');

var _assert = require('assert');

var _assert2 = _interopRequireDefault(_assert);

var _defaults = require('../../chartCore/defaults');

var _ = require('./');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _mocha.it)('Chart/mergeDimArrays.omitGroups 1', function () {
  var dimArrays = {
    fill: [1, 2, 3],
    x: [1, 2, 3],
    x0: [1, 2, 3]
  };
  var actual = (0, _.omitGroups)(dimArrays, _defaults.ACCESSORS_GROUPS);
  var expected = {
    fill: [1, 2, 3]
  };
  _assert2.default.deepEqual(actual, expected);
}); // Copyright 2017 Kensho Technologies, Inc.

(0, _mocha.it)('Chart/mergeDimArrays.mergeDimArrays 1', function () {
  var dimArrays = {
    fill: [1, 2, 3],
    x: [1, 2],
    x0: [3, 4]
  };
  var actual = (0, _.mergeDimArrays)(dimArrays, _defaults.ACCESSORS_GROUPS);
  var expected = {
    fill: [1, 2, 3],
    x: [1, 2, 3, 4]
  };
  _assert2.default.deepEqual(actual, expected);
});
(0, _mocha.it)('Chart/mergeDimArrays.mergeDimArrays 2', function () {
  var dimArrays = {
    fill: [1, 2, 3],
    x: [1, 2],
    x0: undefined,
    x1: []
  };
  var actual = (0, _.mergeDimArrays)(dimArrays, _defaults.ACCESSORS_GROUPS);
  var expected = {
    fill: [1, 2, 3],
    x: [1, 2]
  };
  _assert2.default.deepEqual(actual, expected);
});