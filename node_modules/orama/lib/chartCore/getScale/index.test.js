'use strict';

var _mocha = require('mocha');

var _assert = require('assert');

var _assert2 = _interopRequireDefault(_assert);

var _d3Scale = require('d3-scale');

var d3Scale = _interopRequireWildcard(_d3Scale);

var _ = require('./');

var methods = _interopRequireWildcard(_);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017 Kensho Technologies, Inc.

(0, _mocha.it)('Chart.getAxisScale | case 1', function () {
  var props = {
    xType: 'ordinal',
    xDomain: ['a', 'b', 'c'],
    xRange: [0, 500]
  };
  (0, _assert2.default)(methods.getAxisScale(props, 'x'));
});
(0, _mocha.it)('Chart.getAxisScale | case 2', function () {
  var props = {
    xType: 'linear',
    xDomain: [1, 1],
    xRange: [0, 500]
  };
  (0, _assert2.default)(methods.getAxisScale(props, 'x'));
});
(0, _mocha.it)('Chart.getAxisScale | case 3', function () {
  var props = {
    xType: 'time',
    xDomain: [new Date(2015, 1), new Date(2015, 2)],
    xRange: [0, 500]
  };
  (0, _assert2.default)(methods.getAxisScale(props, 'x'));
});
(0, _mocha.it)('Chart.getAxisScale | case 4', function () {
  var props = {
    xType: 'linear',
    xDomain: [1, 10],
    xRange: [0, 500]
  };
  (0, _assert2.default)(methods.getAxisScale(props, 'x'));
});

(0, _mocha.it)('Chart.getAxisScale | case 1', function () {
  var props = {
    xType: 'ordinal',
    xDomain: ['a', 'b', 'c'],
    xRange: [0, 500]
  };
  (0, _assert2.default)(methods.getAxisScale(props, 'x'));
});
(0, _mocha.it)('Chart.getDefaultScale | case 2', function () {
  var props = {
    xType: 'linear',
    xDomain: [1, 1],
    xRange: [0, 500]
  };
  (0, _assert2.default)(methods.getDefaultScale(props, 'x'));
});
(0, _mocha.it)('Chart.getDefaultScale | case 3', function () {
  var props = {
    xType: 'time',
    xDomain: [new Date(2015, 1), new Date(2015, 2)],
    xRange: [0, 500]
  };
  (0, _assert2.default)(methods.getDefaultScale(props, 'x'));
});
(0, _mocha.it)('Chart.getDefaultScale | case 4', function () {
  var props = {
    xType: 'linear',
    xDomain: [1, 10],
    xRange: [0, 500]
  };
  (0, _assert2.default)(methods.getDefaultScale(props, 'x'));
});

(0, _mocha.it)('Chart.getScale | case 1', function () {
  var props = {
    xType: 'ordinal',
    xDomain: ['a', 'b', 'c'],
    xRange: [0, 500]
  };
  (0, _assert2.default)(methods.getScale(props, 'x'));
});
(0, _mocha.it)('Chart.getScale | case 2', function () {
  var props = {
    fillType: 'ordinal',
    fillDomain: ['a', 'b', 'c'],
    fillRange: [0, 500]
  };
  (0, _assert2.default)(methods.getScale(props, 'fill'));
});
(0, _mocha.it)('getScale.getOrdinalInvert', function () {
  var scale = d3Scale.scalePoint().domain(['a', 'b', 'c', 'd']).range([0, 100]);
  var invert = methods.getOrdinalInvert(scale);
  _assert2.default.equal(invert(0), 'a');
  _assert2.default.equal(invert(20), 'b');
});