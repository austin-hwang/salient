'use strict';

var _mocha = require('mocha');

var _assert = require('assert');

var _assert2 = _interopRequireDefault(_assert);

var _defaults = require('../../chartCore/defaults');

var _defaultTheme = require('../../defaultTheme');

var _ = require('./');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017 Kensho Technologies, Inc.

(0, _mocha.it)('Chart/getPlotRect.getMaxTextWidth', function () {
  var ticks = [{ value: 'a', text: 'a' }, { value: 'amadeus', text: 'amadeus' }];
  var actual = (0, _.getMaxTextWidth)(_defaultTheme.DEFAULT_THEME, ticks);
  var expected = 7;
  _assert2.default.deepEqual(actual, expected);
});

(0, _mocha.it)('chartCore/getPlotRect', function () {
  var props = {
    backgroundOffset: _defaults.BACKGROUND_OFFSET,
    width: 500,
    height: 500,
    theme: _defaultTheme.DEFAULT_THEME,
    yDomain: [0, 100],
    yType: 'linear',
    groupedKeys: ['x', 'y']
  };
  var actual = (0, _.getPlotRect)(props);
  var expected = {
    backgroundOffset: _defaults.BACKGROUND_OFFSET,
    height: 500,
    width: 500,
    plotRect: { x: 56.5, y: 15, width: 428.5, height: 424.5 },
    margin: { bottom: 60.5, left: 56.5, right: 15, top: 15 }
  };
  _assert2.default.deepEqual(actual, expected);
});