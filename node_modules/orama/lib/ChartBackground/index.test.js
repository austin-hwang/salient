'use strict';

var _mocha = require('mocha');

var _assert = require('assert');

var _assert2 = _interopRequireDefault(_assert);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _shallowRender = require('../utils/shallowRender');

var _shallowRender2 = _interopRequireDefault(_shallowRender);

var _defaultTheme = require('../defaultTheme');

var _defaults = require('../chartCore/defaults');

var _ = require('./');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _mocha.it)('ChartBackground', function () {
  var component = (0, _shallowRender2.default)(_react2.default.createElement(_.ChartBackground, null));
  _assert2.default.deepEqual(component.type, 'div');
}); // Copyright 2017 Kensho Technologies, Inc.

(0, _mocha.it)('ChartBackground.getBackground', function () {
  var props = {
    theme: _defaultTheme.DEFAULT_THEME
  };
  var background = (0, _.getBackground)(props);
  _assert2.default.deepEqual(background.type, 'area');
  _assert2.default.deepEqual(background.fill, _defaultTheme.DEFAULT_THEME.plotBackgroundFill);
});
(0, _mocha.it)('ChartBackground.getXGuides', function () {
  var props = {
    theme: _defaultTheme.DEFAULT_THEME,
    groupedKeys: ['x'],
    xTicks: [{ value: 10 }],
    xScale: function xScale(d) {
      return d;
    },
    plotRect: _defaults.PLOT_RECT
  };
  var xGuides = (0, _.getXGuides)(props);
  _assert2.default.deepEqual(xGuides[0].type, 'line');
});
(0, _mocha.it)('ChartBackground.getYGuides', function () {
  var props = {
    theme: _defaultTheme.DEFAULT_THEME,
    groupedKeys: ['y'],
    yTicks: [{ value: 10 }],
    yScale: function yScale(d) {
      return d;
    },
    plotRect: _defaults.PLOT_RECT
  };
  var yGuides = (0, _.getYGuides)(props);
  _assert2.default.deepEqual(yGuides[0].type, 'line');
});
(0, _mocha.it)('ChartBackground.getXText', function () {
  var props = {
    theme: _defaultTheme.DEFAULT_THEME,
    groupedKeys: ['x'],
    xTicks: [{ value: 10 }],
    xScale: function xScale(d) {
      return d;
    },
    plotRect: _defaults.PLOT_RECT
  };
  var xGuides = (0, _.getXText)(props);
  _assert2.default.deepEqual(xGuides[0].type, 'text');
});
(0, _mocha.it)('ChartBackground.getYText', function () {
  var props = {
    theme: _defaultTheme.DEFAULT_THEME,
    groupedKeys: ['y'],
    yTicks: [{ value: 10 }],
    yScale: function yScale(d) {
      return d;
    },
    plotRect: _defaults.PLOT_RECT
  };
  var yGuides = (0, _.getYText)(props);
  _assert2.default.deepEqual(yGuides[0].type, 'text');
});
(0, _mocha.it)('ChartBackground.getBackgroundRenderData', function () {
  var props = {
    theme: _defaultTheme.DEFAULT_THEME
  };
  var backgroundRenderData = (0, _.getBackgroundRenderData)(props);
  _assert2.default.deepEqual(backgroundRenderData[0].type, 'area');
});