'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _isPlainObject2 = require('lodash/isPlainObject');

var _isPlainObject3 = _interopRequireDefault(_isPlainObject2);

var _omit2 = require('lodash/omit');

var _omit3 = _interopRequireDefault(_omit2);

var _isFunction2 = require('lodash/isFunction');

var _isFunction3 = _interopRequireDefault(_isFunction2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Copyright 2017 Kensho Technologies, Inc.

var stateHOC = function (_React$PureComponent) {
  _inherits(stateHOC, _React$PureComponent);

  function stateHOC() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, stateHOC);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = stateHOC.__proto__ || Object.getPrototypeOf(stateHOC)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.childrenMap = function (child) {
      var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

      return _react2.default.cloneElement(child, _extends({
        onUpdate: _this.handleChildUpdate
      }, (0, _omit3.default)(_this.props, ['children', 'startWith']), _this.state, {
        setState: _this.handleChildUpdate,
        key: key
      }));
    }, _this.handleChildUpdate = function (childProps) {
      _this.setState(childProps);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(stateHOC, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      if (this.props.startWith && (0, _isFunction3.default)(this.props.startWith)) {
        this.props.startWith(_extends({
          onUpdate: this.props.onUpdate || this.handleChildUpdate
        }, (0, _omit3.default)(this.props, ['children', 'startWith']), this.state, {
          setState: this.handleChildUpdate
        }));
      } else if (this.props.startWith && (0, _isPlainObject3.default)(this.props.startWith)) {
        this.setState(this.props.startWith);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      if (_react2.default.Children.count(this.props.children) === 0) return _react2.default.createElement('span', null);
      if (_react2.default.Children.count(this.props.children) > 1) {
        return _react2.default.createElement(
          'div',
          null,
          _react2.default.Children.map(this.props.children, this.childrenMap)
        );
      }
      return this.childrenMap(_react2.default.Children.only(this.props.children));
    }
  }]);

  return stateHOC;
}(_react2.default.PureComponent);

stateHOC.defaultProps = {};
stateHOC.propTypes = {
  children: _propTypes2.default.node,
  onUpdate: _propTypes2.default.func,
  startWith: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.object])
};
exports.default = stateHOC;