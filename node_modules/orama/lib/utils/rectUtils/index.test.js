'use strict';

var _mocha = require('mocha');

var _assert = require('assert');

var _assert2 = _interopRequireDefault(_assert);

var _ = require('./');

var rectUtils = _interopRequireWildcard(_);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _mocha.it)('rectUtils.rectBase, rectUtils.marginBase', function () {
  (0, _assert2.default)(rectUtils.rectBase);
  (0, _assert2.default)(rectUtils.marginBase);
}); // Copyright 2017 Kensho Technologies, Inc.

(0, _mocha.it)('rectUtils.marginInset', function () {
  (0, _assert2.default)(rectUtils.marginInset);
  _assert2.default.deepEqual(rectUtils.marginInset({}, {}), { x: 0, y: 0, width: 0, height: 0 });
  var rect = rectUtils.marginInset({}, { width: 100, height: 100 });
  _assert2.default.deepEqual(rect, { x: 0, y: 0, width: 100, height: 100 });
  var rect2 = rectUtils.marginInset({ left: 10, top: 10 }, { width: 100, height: 100 });
  _assert2.default.deepEqual(rect2, { x: 10, y: 10, width: 90, height: 90 });
});

(0, _mocha.it)('rectUtils.inset', function () {
  (0, _assert2.default)(rectUtils.inset);
  _assert2.default.deepEqual(rectUtils.inset(10, { width: 100, height: 100 }), { x: 10, y: 10, width: 80, height: 80 });
});

(0, _mocha.it)('rectUtils.getMaxX', function () {
  (0, _assert2.default)(rectUtils.getMaxX);
  _assert2.default.deepEqual(rectUtils.getMaxX({}), 0);
  _assert2.default.deepEqual(rectUtils.getMaxX({ x: 10, width: 100 }), 110);
});

(0, _mocha.it)('rectUtils.getMaxY', function () {
  (0, _assert2.default)(rectUtils.getMaxY);
  _assert2.default.deepEqual(rectUtils.getMaxY({}), 0);
  _assert2.default.deepEqual(rectUtils.getMaxY({ y: 10, height: 100 }), 110);
});

(0, _mocha.it)('rectUtils.getRangeX', function () {
  _assert2.default.deepEqual(rectUtils.getRangeX(), [0, 0]);
  _assert2.default.deepEqual(rectUtils.getRangeX({ x: 50, width: 100 }), [50, 150]);
});

(0, _mocha.it)('rectUtils.getRangeY', function () {
  _assert2.default.deepEqual(rectUtils.getRangeY(), [0, 0]);
  _assert2.default.deepEqual(rectUtils.getRangeY({ y: 50, height: 100 }), [150, 50]);
});

(0, _mocha.it)('rectUtils.getMidX', function () {
  (0, _assert2.default)(rectUtils.getMidX);
  _assert2.default.deepEqual(rectUtils.getMidX({}), 0);
  _assert2.default.deepEqual(rectUtils.getMidX({ x: 10, width: 100 }), 60);
});

(0, _mocha.it)('rectUtils.getMidY', function () {
  (0, _assert2.default)(rectUtils.getMidY);
  _assert2.default.deepEqual(rectUtils.getMidY({}), 0);
  _assert2.default.deepEqual(rectUtils.getMidY({ y: 10, height: 100 }), 60);
});