'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.trans = exports.transMapFunc = exports.runTransArg = exports.baseTransform = exports.tidyMap = exports.flow = undefined;

var _values2 = require('lodash/values');

var _values3 = _interopRequireDefault(_values2);

var _keys2 = require('lodash/keys');

var _keys3 = _interopRequireDefault(_keys2);

var _mapValues2 = require('lodash/mapValues');

var _mapValues3 = _interopRequireDefault(_mapValues2);

var _curry2 = require('lodash/curry');

var _curry3 = _interopRequireDefault(_curry2);

var _isArray2 = require('lodash/isArray');

var _isArray3 = _interopRequireDefault(_isArray2);

var _map2 = require('lodash/map');

var _map3 = _interopRequireDefault(_map2);

var _slice2 = require('lodash/slice');

var _slice3 = _interopRequireDefault(_slice2);

var _reduce2 = require('lodash/reduce');

var _reduce3 = _interopRequireDefault(_reduce2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

// Copyright 2017 Kensho Technologies, Inc.

var flow = exports.flow = function flow() {
  for (var _len = arguments.length, arg = Array(_len), _key = 0; _key < _len; _key++) {
    arg[_key] = arguments[_key];
  }

  return (0, _reduce3.default)((0, _slice3.default)(arg, 1), function (acc, d) {
    return d(acc);
  }, arg[0]);
};

var tidyMap = exports.tidyMap = function tidyMap(array, func) {
  return (0, _map3.default)(array, function (value) {
    if ((0, _isArray3.default)(value)) {
      return (0, _map3.default)(value, func);
    }
    return func(value);
  });
};

var baseTransform = exports.baseTransform = function baseTransform(mapFunc) {
  return (0, _curry3.default)(function (arg, data) {
    return tidyMap(data, mapFunc(arg));
  }

  //

  );
};var runTransArg = exports.runTransArg = function runTransArg(arg, datum) {
  return (0, _mapValues3.default)(arg, function (funcString) {
    var func = new (Function.prototype.bind.apply(Function, [null].concat(_toConsumableArray((0, _keys3.default)(datum)), ['return  ' + funcString])))();
    return func.apply(undefined, _toConsumableArray((0, _values3.default)(datum)));
  });
};

var transMapFunc = exports.transMapFunc = function transMapFunc(arg) {
  return function (datum) {
    return _extends({}, datum, runTransArg(arg, datum));
  };
};

var trans = exports.trans = baseTransform(transMapFunc);