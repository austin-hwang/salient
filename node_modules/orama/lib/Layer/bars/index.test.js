'use strict';

var _mocha = require('mocha');

var _assert = require('assert');

var _assert2 = _interopRequireDefault(_assert);

var _defaults = require('../../chartCore/defaults');

var _ = require('./');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017 Kensho Technologies, Inc.

var identity = function identity(d) {
  return d;
};
var xScale = identity;
var yScale = identity;

(0, _mocha.it)('Chart.bars 1', function () {
  var props = {
    data: [{ x: 1, y: 1 }],
    xScale: xScale, yScale: yScale, plotRect: _defaults.PLOT_RECT
  };
  var renderData = (0, _.bars)(props);
  _assert2.default.deepEqual(renderData[0].type, 'area');
});
(0, _mocha.it)('Chart.bars 2', function () {
  var props = {
    data: [{ x1: 1, x2: 1, y: 1 }],
    xScale: xScale, yScale: yScale, plotRect: _defaults.PLOT_RECT
  };
  var renderData = (0, _.bars)(props);
  _assert2.default.deepEqual(renderData[0].type, 'area');
});
(0, _mocha.it)('Chart.bars 2', function () {
  var props = {
    data: [{ y1: 1, y2: 1, x: 1 }],
    xScale: xScale, yScale: yScale, plotRect: _defaults.PLOT_RECT
  };
  var renderData = (0, _.bars)(props);
  _assert2.default.deepEqual(renderData[0].type, 'area');
});
(0, _mocha.it)('Chart.bars 1', function () {
  var props = {
    data: [{ x: 1, y: 1 }],
    xDomain: [1, 2],
    xType: 'ordinal',
    xScale: xScale, yScale: yScale, plotRect: _defaults.PLOT_RECT
  };
  var renderData = (0, _.bars)(props);
  _assert2.default.deepEqual(renderData[0].type, 'area');
});
(0, _mocha.it)('Chart.bars 1', function () {
  var props = {
    data: [{ x: 1, y: 1 }],
    yDomain: [1, 2],
    yType: 'ordinal',
    xScale: xScale, yScale: yScale, plotRect: _defaults.PLOT_RECT
  };
  var renderData = (0, _.bars)(props);
  _assert2.default.deepEqual(renderData[0].type, 'area');
});
(0, _mocha.it)('Chart.bars grouped data', function () {
  var props = {
    data: [[{ x: 1, y: 1 }]],
    xScale: xScale, yScale: yScale, plotRect: _defaults.PLOT_RECT
  };
  var renderData = (0, _.bars)(props);
  _assert2.default.deepEqual(renderData[0].type, 'area');
});