'use strict';

var _mocha = require('mocha');

var _assert = require('assert');

var _assert2 = _interopRequireDefault(_assert);

var _path2DUtils = require('../../utils/path2DUtils');

var _canvasUtils = require('../../utils/canvasUtils');

var _defaultTheme = require('../../defaultTheme');

var _ = require('./');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017 Kensho Technologies, Inc.

var theme = _defaultTheme.DEFAULT_THEME;
var plotRect = { x: 0, y: 0, width: 100, height: 100 };

(0, _mocha.it)('CanvasRender/hoverRender 1', function () {
  var renderData = [{ path2D: _path2DUtils.pathMock }];
  var props = { renderData: renderData, plotRect: plotRect, theme: theme };
  _assert2.default.equal((0, _.hoverRender)(props, _canvasUtils.ctxMock), undefined);
});

(0, _mocha.it)('CanvasRender/hoverRender line', function () {
  var renderData = [{ type: 'line', path2D: _path2DUtils.pathMock }];
  var props = { renderData: renderData, plotRect: plotRect, theme: theme };
  _assert2.default.equal((0, _.hoverRender)(props, _canvasUtils.ctxMock), undefined);
});

(0, _mocha.it)('CanvasRender/hoverRender area', function () {
  var renderData = [{ type: 'area', path2D: _path2DUtils.pathMock }];
  var props = { renderData: renderData, plotRect: plotRect, theme: theme };
  _assert2.default.equal((0, _.hoverRender)(props, _canvasUtils.ctxMock), undefined);
});