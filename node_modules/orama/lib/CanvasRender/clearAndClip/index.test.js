'use strict';

var _mocha = require('mocha');

var _assert = require('assert');

var _assert2 = _interopRequireDefault(_assert);

var _canvasUtils = require('../../utils/canvasUtils');

var _ = require('./');

var methods = _interopRequireWildcard(_);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017 Kensho Technologies, Inc.

var plotRect = { x: 0, y: 0, width: 500, height: 500 };

(0, _mocha.it)('CanvasRender/clearAndClip 1', function () {
  _assert2.default.deepEqual(methods.clearAndClip({}, _canvasUtils.ctxMock), undefined);
});
(0, _mocha.it)('CanvasRender/clearAndClip 2', function () {
  _assert2.default.deepEqual(methods.clearAndClip({
    clip: true, plotRect: plotRect
  }, _canvasUtils.ctxMock), undefined);
});
(0, _mocha.it)('CanvasRender/clearAndClip 2', function () {
  _assert2.default.deepEqual(methods.clearAndClip({
    layerProps: { clipPlot: false }
  }, _canvasUtils.ctxMock), undefined);
});