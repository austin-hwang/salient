'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extractTooltipData = undefined;

var _omit2 = require('lodash/omit');

var _omit3 = _interopRequireDefault(_omit2);

var _sortBy2 = require('lodash/sortBy');

var _sortBy3 = _interopRequireDefault(_sortBy2);

var _map2 = require('lodash/map');

var _map3 = _interopRequireDefault(_map2);

var _isString2 = require('lodash/isString');

var _isString3 = _interopRequireDefault(_isString2);

var _some2 = require('lodash/some');

var _some3 = _interopRequireDefault(_some2);

var _isDate2 = require('lodash/isDate');

var _isDate3 = _interopRequireDefault(_isDate2);

var _get2 = require('lodash/get');

var _get3 = _interopRequireDefault(_get2);

var _reduce2 = require('lodash/reduce');

var _reduce3 = _interopRequireDefault(_reduce2);

var _isNaN2 = require('lodash/isNaN');

var _isNaN3 = _interopRequireDefault(_isNaN2);

var _isUndefined2 = require('lodash/isUndefined');

var _isUndefined3 = _interopRequireDefault(_isUndefined2);

var _head2 = require('lodash/head');

var _head3 = _interopRequireDefault(_head2);

var _isArray2 = require('lodash/isArray');

var _isArray3 = _interopRequireDefault(_isArray2);

var _defaults = require('../../chartCore/defaults');

var _getForKey = require('../../chartCore/getForKey');

var _plotValue = require('../../Layer/plotValue');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getDatum = function getDatum(data) {
  if ((0, _isArray3.default)(data)) return (0, _head3.default)(data);
  return data;
}; // Copyright 2017 Kensho Technologies, Inc.

var isDisplayable = function isDisplayable(value) {
  return value !== 'NaN' && !(0, _isUndefined3.default)(value) && !(0, _isNaN3.default)(value);
};
var tooltipValuesForStrings = function tooltipValuesForStrings(tooltipExtraDimensions, datum) {
  return (0, _reduce3.default)(tooltipExtraDimensions, function (acc, key) {
    var value = (0, _get3.default)(datum, key);
    if ((0, _isDate3.default)(value)) {
      value = value.toDateString();
    }
    if (isDisplayable(value)) {
      acc.push({ name: key, value: value });
    }
    return acc;
  }, []);
};
var tooltipValuesForObjects = function tooltipValuesForObjects(tooltipExtraDimensions, datum) {
  return (0, _reduce3.default)(tooltipExtraDimensions, function (acc, obj) {
    var accessor = obj.accessor,
        value = obj.value,
        _obj$format = obj.format,
        format = _obj$format === undefined ? function (d) {
      return d;
    } : _obj$format,
        name = obj.name;

    acc.push({
      name: name || accessor,
      value: format(value || (0, _get3.default)(datum, accessor))
    });
    return acc;
  }, []);
};
var getExtraTooltipValues = function getExtraTooltipValues(props, datum) {
  var tooltipExtraDimensions = props.tooltipExtraDimensions;

  if ((0, _some3.default)(tooltipExtraDimensions, _isString3.default)) {
    return tooltipValuesForStrings(tooltipExtraDimensions, datum);
  }
  return tooltipValuesForObjects(tooltipExtraDimensions, datum);
};
var extractTooltipData = exports.extractTooltipData = function extractTooltipData(props, hoverData) {
  var localKeys = props.localKeys,
      tooltipKeys = props.tooltipKeys,
      _props$accessorsToolt = props.accessorsTooltipOrder,
      accessorsTooltipOrder = _props$accessorsToolt === undefined ? _defaults.ACCESSORS_TOOLTIP_ORDER : _props$accessorsToolt;


  var datum = getDatum(hoverData);
  var tooltipValues = (0, _reduce3.default)(tooltipKeys || localKeys, function (acc, key) {
    var scaleKey = (0, _plotValue.getScaleKeyByHash)(props, key);
    var keyAlias = props[key + 'Alias'] || key;
    var name = props[key + 'Name'] || props[key];
    var formatter = props[scaleKey + 'TooltipFormat'] || (0, _getForKey.getTooltipFormat)(props, scaleKey);
    var value = formatter((0, _get3.default)(datum, props[key]));
    var order = accessorsTooltipOrder[key];
    if (isDisplayable(value)) {
      acc.push({ key: keyAlias, name: name, value: value, order: order });
    }
    return acc;
  }, []);
  var extraTooltipValues = getExtraTooltipValues(props, datum);
  var orderedTooltipValues = (0, _map3.default)((0, _sortBy3.default)(tooltipValues, 'order'), function (values) {
    return (0, _omit3.default)(values, 'order');
  });
  var title = props.titleValue || datum[props.title];
  return {
    title: title,
    values: orderedTooltipValues.concat(extraTooltipValues)
  };
};